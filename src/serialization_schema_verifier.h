#ifndef SERIALIZATION_SCHEMA_VERIFIER_H
#define SERIALIZATION_SCHEMA_VERIFIER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef SERIALIZATION_SCHEMA_READER_H
#include "serialization_schema_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"

static int Gloxvm_Bytecode_verify_table(flatcc_table_verifier_descriptor_t *td);
static int Gloxvm_Module_verify_table(flatcc_table_verifier_descriptor_t *td);

static int Gloxvm_Any_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_struct(ud, 8, 8); /* UInt64 */
    case 2: return flatcc_verify_union_struct(ud, 2, 2); /* Short */
    case 3: return flatcc_verify_union_struct(ud, 4, 4); /* Float64 */
    case 4: return flatcc_verify_union_struct(ud, 1, 1); /* Boolean */
    default: return flatcc_verify_ok;
    }
}

static inline int Gloxvm_UInt64_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, Gloxvm_UInt64_identifier, 8, 8);
}

static inline int Gloxvm_UInt64_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, Gloxvm_UInt64_type_hash, 8, 8);
}

static inline int Gloxvm_UInt64_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 8, 8);
}

static inline int Gloxvm_UInt64_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 8, 8);
}

static inline int Gloxvm_Short_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, Gloxvm_Short_identifier, 2, 2);
}

static inline int Gloxvm_Short_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, Gloxvm_Short_type_hash, 2, 2);
}

static inline int Gloxvm_Short_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 2, 2);
}

static inline int Gloxvm_Short_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 2, 2);
}

static inline int Gloxvm_Float64_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, Gloxvm_Float64_identifier, 4, 4);
}

static inline int Gloxvm_Float64_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, Gloxvm_Float64_type_hash, 4, 4);
}

static inline int Gloxvm_Float64_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 4, 4);
}

static inline int Gloxvm_Float64_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 4, 4);
}

static inline int Gloxvm_Boolean_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, Gloxvm_Boolean_identifier, 1, 1);
}

static inline int Gloxvm_Boolean_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, Gloxvm_Boolean_type_hash, 1, 1);
}

static inline int Gloxvm_Boolean_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 1, 1);
}

static inline int Gloxvm_Boolean_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 1, 1);
}

static int Gloxvm_Bytecode_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 2, 2) /* type */)) return ret;
    if ((ret = flatcc_verify_union_field(td, 2, 0, &Gloxvm_Any_union_verifier) /* data */)) return ret;
    return flatcc_verify_ok;
}

static inline int Gloxvm_Bytecode_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Gloxvm_Bytecode_identifier, &Gloxvm_Bytecode_verify_table);
}

static inline int Gloxvm_Bytecode_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Gloxvm_Bytecode_type_identifier, &Gloxvm_Bytecode_verify_table);
}

static inline int Gloxvm_Bytecode_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Gloxvm_Bytecode_verify_table);
}

static inline int Gloxvm_Bytecode_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Gloxvm_Bytecode_verify_table);
}

static int Gloxvm_Module_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_vector_field(td, 0, 0, &Gloxvm_Bytecode_verify_table) /* code */)) return ret;
    return flatcc_verify_ok;
}

static inline int Gloxvm_Module_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Gloxvm_Module_identifier, &Gloxvm_Module_verify_table);
}

static inline int Gloxvm_Module_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Gloxvm_Module_type_identifier, &Gloxvm_Module_verify_table);
}

static inline int Gloxvm_Module_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Gloxvm_Module_verify_table);
}

static inline int Gloxvm_Module_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Gloxvm_Module_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* SERIALIZATION_SCHEMA_VERIFIER_H */
